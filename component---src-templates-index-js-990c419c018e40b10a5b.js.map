{"version":3,"sources":["webpack:///./src/components/Pagination/Wrapper.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/Summary/Wrapper.js","webpack:///./src/components/Summary/Link.js","webpack:///./src/components/Summary/Date.js","webpack:///./src/components/Summary/ContinueReading.js","webpack:///./src/components/Summary/index.js","webpack:///./src/templates/index.js"],"names":["Wrapper","styled","div","Pagination","previousUrl","nextUrl","isFirst","isLast","Button","to","Link","GatsbyLink","userConfig","primaryColor","Date","span","ContinueReading","Summary","date","title","excerpt","slug","image","FeaturedImage","sizes","childImageSharp","H1","P","IndexPage","pageContext","group","index","pageCount","toString","Container","author","htmlAttributes","lang","name","content","description","map","node","Card","key","fields","frontmatter","featuredImage"],"mappings":"kYAEA,IAKeA,EALCC,UAAOC,IAAV,K,YCgBEC,MAbf,YAA8E,IAAzDC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,QAA2C,IAAlCC,eAAkC,aAAjBC,cAAiB,SAC3E,OACE,kBAAC,EAAD,MACID,GACA,kBAACE,EAAA,EAAD,CAAQC,GAAIL,GAAZ,kBAEAG,GACA,kBAACC,EAAA,EAAD,CAAQC,GAAIJ,GAAZ,mB,wKCVR,IAIeL,EAJCC,UAAOC,IAAV,K,oNCEb,IASeQ,EATFT,kBAAOU,IAAPV,CAAH,IAKGW,IAAWC,c,6MCPxB,IAQeC,EARFb,UAAOc,KAAV,K,oQCEV,IAYeC,EAZSf,kBAAOU,IAAPV,CAAH,IAQRW,IAAWC,cCcTI,MAhBf,YAAuD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MAC5C,OACE,kBAAC,EAAD,KACKA,GACC,kBAAC,EAAD,CAAMb,GAAIY,GACR,kBAACE,EAAA,EAAD,CAAeC,MAAOF,EAAMG,gBAAgBD,SAGhD,kBAACE,EAAA,EAAD,KAAI,kBAAC,EAAD,CAAMjB,GAAIY,GAAOF,IACrB,kBAAC,EAAD,KAAOD,GACP,kBAACS,EAAA,EAAD,KAAIP,GACJ,kBAAC,EAAD,CAAiBX,GAAIY,GAArB,wBC4BOO,UArCG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACXC,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UAChB5B,EAAc2B,EAAQ,GAAM,EAAI,IAAMA,EAAQ,GAAGE,WACjD5B,GAAW0B,EAAQ,GAAGE,WAC5B,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEf,MAAUP,IAAWO,MAAhB,MAA2BP,IAAWuB,OAC3CC,eAAgB,CAAEC,KAAM,OAExB,0BACEC,KAAK,cACLC,QAAY3B,IAAWO,MAAhB,MAA2BP,IAAW4B,eAGhDV,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,kBAACC,EAAA,EAAD,CAAMC,IAAKF,EAAKG,OAAOxB,MACrB,kBAAC,EAAD,CACEH,KAAMwB,EAAKI,YAAY5B,KACvBC,MAAOuB,EAAKI,YAAY3B,MACxBC,QAASsB,EAAKtB,QACdE,MAAOoB,EAAKI,YAAYC,cACxB1B,KAAMqB,EAAKG,OAAOxB,WAIxB,kBAAC,EAAD,CACEf,QAAmB,IAAVyB,EACTxB,OAAQwB,IAAUC,EAClB3B,QAASA,EACTD,YAAaA","file":"component---src-templates-index-js-990c419c018e40b10a5b.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 50px;\r\n  text-align: center;\r\n`;\r\n\r\nexport default Wrapper;","import React from 'react';\r\n\r\nimport Wrapper from './Wrapper';\r\nimport Button from '../Button';\r\n\r\nfunction Pagination({previousUrl, nextUrl, isFirst = false, isLast = false}) {\r\n  return (\r\n    <Wrapper>\r\n      {!isFirst &&\r\n        <Button to={previousUrl}>&larr; Newer Posts</Button>\r\n      }\r\n      {!isLast &&\r\n        <Button to={nextUrl}>Older Posts &rarr;</Button>\r\n      }\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Pagination;","import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport default Wrapper;","import styled from 'styled-components';\r\nimport GatsbyLink from 'gatsby-link';\r\nimport userConfig from '../../../config';\r\n\r\nconst Link = styled(GatsbyLink)`\r\n  color: #3e465b;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    color: ${userConfig.primaryColor};\r\n  }\r\n`;\r\n\r\nexport default Link;","import styled from 'styled-components';\r\n\r\nconst Date = styled.span`\r\n  color: #666d71;\r\n  display: block;\r\n  font-size: 1.6em;\r\n  margin: 0;\r\n  text-align: center;\r\n`;\r\n\r\nexport default Date;","import styled from 'styled-components';\r\nimport GatsbyLink from 'gatsby-link';\r\nimport userConfig from '../../../config';\r\n\r\nconst ContinueReading = styled(GatsbyLink)`\r\n  color: #666d71;\r\n  display: inline-block;\r\n  font-size: 14px;\r\n  margin-top: 50px;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    color: ${userConfig.primaryColor};\r\n  }  \r\n`;\r\n\r\nexport default ContinueReading;","import React from 'react';\r\n\r\nimport FeaturedImage from '../FeaturedImage';\r\nimport H1 from '../H1';\r\nimport P from '../P';\r\nimport Wrapper from './Wrapper';\r\nimport Link from './Link';\r\nimport Date from './Date';\r\nimport ContinueReading from './ContinueReading';\r\n\r\nfunction Summary({date, title, excerpt, slug, image}) {\r\n  return (\r\n    <Wrapper>\r\n        {image &&\r\n          <Link to={slug}>\r\n            <FeaturedImage sizes={image.childImageSharp.sizes}/>\r\n          </Link>\r\n        }\r\n        <H1><Link to={slug}>{title}</Link></H1>\r\n        <Date>{date}</Date>\r\n        <P>{excerpt}</P>\r\n        <ContinueReading to={slug}>Continue Reading &rarr;</ContinueReading>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Summary;","import Helmet from 'react-helmet';\r\nimport React from 'react';\r\n\r\nimport userConfig from '../../config';\r\n\r\nimport Layout from './layout';\r\n\r\nimport Card from '../components/Card';\r\nimport Container from '../components/Container';\r\nimport Pagination from '../components/Pagination';\r\nimport Summary from '../components/Summary';\r\n\r\nconst IndexPage = ({ pageContext }) => {\r\n  const { group, index, pageCount } = pageContext;\r\n  const previousUrl = index - 1 === 1 ? '' : (index - 1).toString();\r\n  const nextUrl = (index + 1).toString();\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Helmet\r\n          title={`${userConfig.title} | ${userConfig.author}`}\r\n          htmlAttributes={{ lang: 'en' }}\r\n        >\r\n          <meta\r\n            name=\"description\"\r\n            content={`${userConfig.title} | ${userConfig.description}`}\r\n          />\r\n        </Helmet>\r\n        {group.map(({ node }) => (\r\n          <Card key={node.fields.slug}>\r\n            <Summary\r\n              date={node.frontmatter.date}\r\n              title={node.frontmatter.title}\r\n              excerpt={node.excerpt}\r\n              image={node.frontmatter.featuredImage}\r\n              slug={node.fields.slug}\r\n            />\r\n          </Card>\r\n        ))}\r\n        <Pagination\r\n          isFirst={index === 1}\r\n          isLast={index === pageCount}\r\n          nextUrl={nextUrl}\r\n          previousUrl={previousUrl}\r\n        />\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\nexport default IndexPage;\r\n"],"sourceRoot":""}